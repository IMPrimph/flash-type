{"version":3,"sources":["assets/logo.png","components/Nav/Nav.jsx","assets/flash.png","components/Landing/Landing.jsx","components/Footer/Footer.jsx","components/TryAgain/TryAgain.jsx","components/ChallengeDetailsCard/ChallengeDetailsCard.jsx","components/TestLetter/TestLetter.jsx","components/TypingChallenge/TypingChallenge.jsx","components/TypingChallengeContainer/TypingChallengeContainer.jsx","components/TestContainer/TestContainer.jsx","components/ChallengeSection/ChallengeSection.jsx","components/App/App.jsx","index.js"],"names":["Nav","className","src","logo","alt","Landing","data-aos","options","strings","autoStart","loop","flash","Footer","href","target","rel","TryAgain","words","characters","wpm","startAgain","onClick","ChallengeDetailsCard","cardName","cardValue","TestLetter","individualLetterInfo","statusClassName","correct","incorrect","notAttempted","status","testLetter","TypingChallenge","selectedParagraph","timerStarted","timeRemaining","testInfo","onInputChange","map","index","onChange","e","value","cols","rows","placeholder","TypingChallengeContainer","TestContainer","ChallangeSection","defaultState","App","state","fetchNewParagraph","handleUserInput","inputValue","startTimer","length","split","setState","slice","isCorrect","timer","setInterval","timeSpent","parseInt","clearInterval","fetch","then","res","text","info","selectedLetter","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51f7e3cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.904ac8fd.png\";","import React, { Component } from 'react'\r\nimport logo from \"./../../assets/logo.png\"\r\nimport './Nav.css'\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-left\">\r\n                <img src={logo} alt=\"logo\" className=\"flash-logo\"/>\r\n                <p className=\"flash-logo-text\">FlashType</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","export default __webpack_public_path__ + \"static/media/flash.96e141d3.png\";","import React, { Component } from 'react'\r\nimport './landing.css'\r\nimport flash from './../../assets/flash.png'\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div className=\"landing-container\">\r\n            <div data-aos=\"fade-right\" className=\"landing-left\">\r\n                <h1 className=\"landing-header\">Can You Type....</h1>\r\n                <div className=\"typewriter-container\">\r\n                <Typewriter\r\n                    options={{\r\n                        strings: ['Fast', 'Correct?', 'Quick'],\r\n                        autoStart: true,\r\n                        loop: true,\r\n                    }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-right\">\r\n                <img  data-aos=\"fade-left\"src={flash} className=\"flash-image\" alt=\"hero\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing","import React, { Component } from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"footer-container\">\r\n            <a href=\"https://github.com/IMPrimph\" className=\"footer-link\" target=\"_blank\" rel=\"noreferrer\">Find me on GitHub</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react'\r\nimport './TryAgain.css'\r\n\r\nconst TryAgain = ({ words, characters, wpm, startAgain }) => {\r\n    return (\r\n        <div className=\"try-again-container\">\r\n            <h1>Test Results</h1>\r\n            <div className=\"result-container\">\r\n                <p>\r\n                    <b>Characters: </b> {characters}\r\n                </p>\r\n                <p>\r\n                    <b>Words: </b> {words}\r\n                </p>\r\n                <p>\r\n                    <b>Speed: </b> {wpm} wpm\r\n                </p>\r\n            </div>\r\n            {/* retry button */}\r\n            <div>\r\n                <button\r\n                    onClick={() => startAgain()}\r\n                    className=\"end-buttons start-again-btn\"\r\n                >\r\n                    Retry\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TryAgain;","import React, { Component } from 'react'\r\nimport './ChallengeDetailsCard.css'\r\n\r\nconst ChallengeDetailsCard = ({cardName, cardValue}) => {\r\n    return ( \r\n        <div className=\"details-card-container\">\r\n            <div className=\"card-name\">\r\n                {cardName}\r\n            </div>\r\n            <div className=\"card-value\">\r\n                {cardValue}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ChallengeDetailsCard;","import React from 'react'\r\nimport './TestLetter.css'\r\n\r\nconst TestLetter = ({individualLetterInfo}) => {\r\n    const {status} = individualLetterInfo\r\n\r\n    const statusClassName = {\r\n        correct: \"test-letter-correct\",\r\n        incorrect: \"test-letter-incorrect\",\r\n        notAttempted: \"test-letter-not-attempted\"\r\n    }[status]\r\n\r\n    return ( \r\n        <span className={`test-letter ${statusClassName}`}>\r\n            {individualLetterInfo.testLetter}\r\n        </span>\r\n     );\r\n}\r\n \r\nexport default TestLetter;","import React from 'react'\r\nimport TestLetter from '../TestLetter/TestLetter';\r\nimport './TypingChallenge.css'\r\n\r\nconst TypingChallenge = ({ selectedParagraph, timerStarted, timeRemaining, testInfo, onInputChange }) => {\r\n    return (\r\n        <div className=\"typing-challenge\">\r\n            <div className=\"timer-container\">\r\n                <p className=\"timer\">00:\r\n                    {timeRemaining >= 10 ? timeRemaining : `0${timeRemaining}`}\r\n                </p>\r\n                <p className=\"timer-info\">\r\n                    {!timerStarted && \"Start typing to start the test\"}\r\n                </p>\r\n            </div>\r\n            <div className=\"text-area-container\">\r\n                <div className=\"text-area-left\">\r\n                    <div className=\"text-area test-paragraph\">\r\n                        {/* {selectedParagraph} */}\r\n                        {\r\n                            testInfo.map((individualLetterInfo, index) => {\r\n                                return <TestLetter\r\n                                    key={index}\r\n                                    individualLetterInfo={individualLetterInfo} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-area-right\">\r\n                    <textarea\r\n                        onChange={(e) => onInputChange(e.target.value)}\r\n                        cols=\"30\" rows=\"10\"\r\n                        className=\"text-area\"\r\n                        placeholder=\"Start typing here\">\r\n\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypingChallenge;","import React from 'react'\r\nimport ChallengeDetailsCard from '../ChallengeDetailsCard/ChallengeDetailsCard'\r\nimport TypingChallenge from '../TypingChallenge/TypingChallenge'\r\nimport './TypingChallengeContainer.css'\r\n\r\nconst TypingChallengeContainer = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n    onInputChange\r\n}) => {\r\n    return (\r\n        <div className=\"typing-challenge-container\">\r\n            {/* details section */}\r\n            <div className=\"details-container\">\r\n                {/* words typed */}\r\n                <ChallengeDetailsCard cardName=\"Words\" cardValue={words} />\r\n\r\n                {/* characters typed */}\r\n                <ChallengeDetailsCard cardName=\"Characters\" cardValue={characters} />\r\n\r\n                {/* speed */}\r\n                <ChallengeDetailsCard cardName=\"Speed\" cardValue={wpm} />\r\n            </div>\r\n\r\n            {/* the real typing container */}\r\n            <div className=\"typewriter-container\">\r\n                <TypingChallenge\r\n                    timerStarted={timerStarted}\r\n                    timeRemaining={timeRemaining}\r\n                    selectedParagraph={selectedParagraph}\r\n                    testInfo={testInfo}\r\n                    onInputChange={onInputChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypingChallengeContainer;","import React from 'react'\r\nimport TryAgain from '../TryAgain/TryAgain'\r\nimport './TestContainer.css'\r\nimport TypingChallengeContainer from '../TypingChallengeContainer/TypingChallengeContainer'\r\n\r\nconst TestContainer = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n    onInputChange,\r\n    startAgain\r\n}) => {\r\n    return (\r\n        <div className=\"test-container\">\r\n            {\r\n                timeRemaining > 0 ? (\r\n                    <div data-aos=\"fade-up\" className=\"typing-challenge-container\">\r\n                        <TypingChallengeContainer\r\n                            words={words}\r\n                            characters={characters}\r\n                            wpm={wpm}\r\n                            timeRemaining={timeRemaining}\r\n                            timerStarted={timerStarted}\r\n                            selectedParagraph={selectedParagraph}\r\n                            testInfo={testInfo}\r\n                            onInputChange={onInputChange}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"try-again-cont\">\r\n                            <TryAgain words={words} characters={characters} wpm={wpm} startAgain={startAgain} />\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestContainer;\r\n","import React from 'react'\r\nimport TestContainer from '../TestContainer/TestContainer'\r\nimport './ChallengeSection.css'\r\n\r\nconst ChallangeSection = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n    onInputChange,\r\n    startAgain\r\n}) => {\r\n    return (\r\n        <div className=\"challenge-section-container\">\r\n            <h1 className=\"challenge-section-header\" data-aos=\"fade-down\">\r\n                Take a speed test now!\r\n            </h1>\r\n            <TestContainer\r\n                words={words}\r\n                characters={characters}\r\n                wpm={wpm}\r\n                timeRemaining={timeRemaining}\r\n                timerStarted={timerStarted}\r\n                selectedParagraph={selectedParagraph}\r\n                testInfo={testInfo}\r\n                onInputChange={onInputChange}\r\n                startAgain={startAgain}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChallangeSection;\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Nav from \"../Nav/Nav\"\r\nimport Landing from '../Landing/Landing'\r\nimport Footer from \"../Footer/Footer\"\r\nimport ChallangeSection from '../ChallengeSection/ChallengeSection'\r\n\r\nconst totalTime = 60;\r\nconst url = \"http://metaphorpsum.com/paragraphs/1/9\"\r\nconst defaultState = {\r\n    selectedParagraph: \"\",\r\n    timerStarted: false,\r\n    timeRemaining: totalTime,\r\n    words: 0,\r\n    characters: 0,\r\n    wpm: 0,\r\n    testInfo: []\r\n}\r\n\r\nclass App extends React.Component {\r\n    state = defaultState\r\n\r\n    fetchNewParagraph() {\r\n        fetch(url)\r\n            .then(res => res.text())\r\n            .then(info => {\r\n                this.setState({ selectedParagraph: info })\r\n                const selectedParagraphArray = info.split(\"\")\r\n                const testInfo = selectedParagraphArray.map(selectedLetter => {\r\n                    return {\r\n                        testLetter: selectedLetter,\r\n                        status: 'notAttempted'\r\n                    }\r\n                })\r\n                this.setState({ ...defaultState, testInfo: testInfo, selectedParagraph: info })\r\n            })\r\n    }\r\n\r\n    // life cycle method\r\n    componentDidMount() {\r\n        this.fetchNewParagraph()\r\n    }\r\n\r\n    startAgain = () => {\r\n        this.fetchNewParagraph()\r\n    }\r\n\r\n    handleUserInput = (inputValue) => {\r\n        if (!this.state.timerStarted) {\r\n            this.startTimer()\r\n        }\r\n        const characters = inputValue.length;\r\n        const words = inputValue.split(\" \").length\r\n        const index = characters - 1\r\n\r\n        if (index < 0) {\r\n            this.setState({\r\n                testInfo: [\r\n                    {\r\n                        testLetter: this.state.testInfo[0].testLetter,\r\n                        status: 'notAttempted'\r\n                    },\r\n                    ...this.state.testInfo.slice(1)\r\n                ],\r\n                characters,\r\n                words\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (index >= this.state.selectedParagraph.length) {\r\n            this.setState({ characters, words });\r\n            return\r\n        }\r\n\r\n        //make a copy of testInfo\r\n        const testInfo = this.state.testInfo\r\n        if (!(index === this.state.selectedParagraph.length - 1)) {\r\n            testInfo[index + 1].status = 'notAttempted'\r\n        }\r\n\r\n        //check for the correctly typed letters\r\n        const isCorrect = inputValue[index] === testInfo[index].testLetter;\r\n\r\n        //update the testInfo\r\n        testInfo[index].status = isCorrect ? 'correct' : 'incorrect'\r\n\r\n        //update the state\r\n        this.setState({\r\n            testInfo,\r\n            words,\r\n            characters\r\n        })\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.setState({ timerStarted: true })\r\n        const timer = setInterval(() => {\r\n            if (this.state.timeRemaining > 0) {\r\n                // change the wpm\r\n                const timeSpent = totalTime - this.state.timeRemaining\r\n                const wpm = timeSpent > 0\r\n                    ? (this.state.words / timeSpent) * totalTime\r\n                    : 0\r\n                this.setState({\r\n                    timeRemaining: this.state.timeRemaining - 1,\r\n                    wpm: parseInt(wpm)\r\n                })\r\n            } else {\r\n                clearInterval(timer)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                {/* nav section */}\r\n                <Nav />\r\n\r\n                {/* landing page */}\r\n                <Landing />\r\n\r\n                {/* challenge section */}\r\n                <ChallangeSection\r\n                    selectedParagraph={this.state.selectedParagraph}\r\n                    words={this.state.words}\r\n                    characters={this.state.characters}\r\n                    wpm={this.state.wpm}\r\n                    timeRemaining={this.state.timeRemaining}\r\n                    timerStarted={this.state.timerStarted}\r\n                    testInfo={this.state.testInfo}\r\n                    onInputChange={this.handleUserInput}\r\n                    startAgain={this.startAgain}\r\n                />\r\n\r\n                {/* Footer */}\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from \"./components/App/App.jsx\"\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}